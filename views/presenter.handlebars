<script src="/public/js/palette.js"></script>
<script type="text/javascript">
    var socket = io.connect("http://"+location.hostname+":3030");

    function initReveal() {
        Reveal.initialize({history: false, showNotes: true, controls: false});

        notifyServer = function(event){
            data = getRevealPosition();
            socket.emit("slidechanged" , data);
            console.log("howdy");
        }

        Reveal.addEventListener("slidechanged", notifyServer);

        Reveal.addEventListener("fragmentshown", notifyServer);

        Reveal.addEventListener("fragmenthidden", notifyServer);
    }

    function getRevealPosition() {
        return {
                indexv : Reveal.getIndices().v,
                indexh : Reveal.getIndices().h,
                indexf : Reveal.getIndices().f || 0
        };
    }

    
    var chartData = {};
    var pollElements = {}
    
    function initSocket() {
        socket.on("message", function(data){
            console.log(data);
        });

        socket.on("pollAnswered", function(data){
            pollId = data.pollId;
            answer = data.answer;
            previous = data.previous;

            if(!pollElements[pollId]) {
                pollElements[pollId] = document.getElementById(pollId).parentNode;
            }

            if(!chartData[pollId]) {
                chartData[pollId] = {};
            } 
            if(!chartData[pollId][answer]) {
                chartData[pollId][answer] = 0;
            }
            chartData[pollId][answer]++;

            if(previous) {
                if(!chartData[pollId][previous]) {
                    chartData[pollId][previous] = 0;
                }
                chartData[pollId][previous]--;
            }

            var chartPalette = palette('tol-sq', Object.keys(chartData[pollId]).length);
            slices = Object.keys(chartData[pollId]).map(function(sliceName, i){
                return { key: sliceName, value: chartData[pollId][sliceName], color: "#" + chartPalette[i] }
            });

            console.log(slices);

            renderPollChart(pollElements[pollId], slices);

            data = getRevealPosition();
            Reveal.slide(data.indexh, data.indexv, data.indexf);
        });        
    }


</script>
<script src="/public/js/poll.js"></script>
<script src="/public/js/presentation.js"></script>
<script src="/public/js/socketInfo.js"></script>
